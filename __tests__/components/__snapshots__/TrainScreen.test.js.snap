// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TrainScreen />  renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Image
      source={1}
      style={
        Object {
          "flex": 1,
          "height": 50,
          "resizeMode": "contain",
          "width": 200,
        }
      }
    />
    <TextInput
      allowFontScaling={true}
      keyboardType="numeric"
      onChangeText={[Function]}
      rejectResponderTermination={true}
      style={
        Object {
          "borderColor": "gray",
          "borderWidth": 1,
          "bottom": 20,
          "height": 40,
          "width": 500,
        }
      }
      underlineColorAndroid="transparent"
    />
    <View
      style={
        Object {
          "borderRadius": 25,
          "color": "#64B82C",
          "fontSize": 20,
          "width": 375,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "#64B82C",
                },
              ]
            }
          >
            HAE
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
        "marginHorizontal": 16,
        "top": 133.4,
        "width": 500,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
